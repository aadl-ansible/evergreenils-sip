<?xml version="1.0"?>
<acsconfig xmlns="http://openncip.org/acs-config/1.0/">

    <error-detect enabled="true" />

    <server-params
        min_spare_servers='1'
        max_spare_servers='2'
        min_servers='3'
        max_servers='25' />

    <listeners>
        <service
            port="0:8080/tcp"
            transport="http"
            protocol="NCIP/1.0" />

        <service
            port="8023/tcp"
            transport="telnet"
            protocol="SIP/1.00"
            timeout="60" />

        <service
            port="127.0.0.1:6001/tcp"
            transport="RAW"
            protocol="SIP/2.00"
            timeout="60" />
    </listeners>

    <accounts>
    {% for (key,value) in sip_accounts.items() %}
        <login id="{{ value.username }}" password="{{ value.password }}" institution="{{ value.institution }}" av_format="{{ value.av_format }}"/>
    {% endfor %}
    </accounts>


    <institutions>
    {% for (key,value) in sip_accounts.items() %}
        <institution id="{{ value.institution }}" implementation="OpenILS::SIP">
            <policy
                checkin="{{ value.policy_checkin }}"
                checkout="{{ value.policy_checkout }}"
                renewal="{{ value.policy_renewal }}"
                status_update="{{ value.policy_status_update }}"
                offline="{{ value.policy_offline }}"
                timeout="{{ value.policy_timeout }}"
                retries="{{ value.policy_retries }}"/>

            <encoding>{{ value.encoding }}</encoding>

            <implementation_config>
                <bootstrap>{{ opensrf_install_prefix }}/conf/opensrf_core.xml</bootstrap>
                <currency>{{ value.currency }}</currency>
                <supports>
                    <item name='magnetic media' value='{{ value.supports_magnetic_media }}'/>
                    <item name='security inhibit' value='{{ value.supports_security_inhibit }}'/>
                    <item name='offline operation' value='{{ value.supports_offline_operation }}'/>
                    <item name='patron status request' value='{{ value.supports_patron_status_request }}'/>
                    <item name='checkout' value='{{ value.supports_checkout }}'/>
                    <item name='checkin' value='{{ value.supports_checkin }}'/>
                    <item name='block patron' value='{{ value.supports_block_patron }}'/>
                    <item name='acs status' value='{{ value.supports_acs_status }}'/>
                    <item name='login' value='{{ value.supports_login }}'/>
                    <item name='patron information' value='{{ value.supports_patron_information }}'/>
                    <item name='end patron session' value='{{ value.supports_end_patron_session }}'/>
                    <item name='fee paid' value='{{ value.supports_fee_paid }}'/>
                    <item name='item information' value='{{ value.supports_item_information }}'/>
                    <item name='item status update' value='{{ value.supports_item_status_update }}'/>
                    <item name='patron enable' value='{{ value.supports_patron_enable }}'/>
                    <item name='hold' value='{{ value.supports_hold }}'/>
                    <item name='renew' value='{{ value.supports_renew }}'/>
                    <item name='renew all' value='{{ value.supports_renew_all }}'/>
                </supports>

                <options>
                    <option name='msg64_summary_datatype' value='{{ value.option_msg64_summary_datatype }}' />
                    <option name='msg64_hold_datatype' value='{{ value.option_msg64_hold_datatype }}' />
                    <option name='msg64_hold_items_available' value='{{ value.option_msg64_hold_items_available }}' />
                    <option name='patron_type_uses_code' value='{{ value.option_patron_type_uses_code }}' />
                    <option name='use_sip_date_format' value='{{ value.option_use_sip_date_format }}' />
                    <option name='patron_calculate_recal_ok' value='{{ value.option_patron_calculate_recal_ok }}' />
                </options>

                <checkin_override>
                {% for override in value.checkin_override %}
                    <event>{{ override }}</event>
                {% endfor %}
                </checkin_override>

                <checkout_override>
                {% for override in value.checkout_override %}
                    <event>{{ override }}</event>
                {% endfor %}
                </checkout_override>

                <checkin_hold_as_transit>{{ value.checkin_hold_as_transit }}</checkin_hold_as_transit>

            </implementation_config>

        </institution>
    {% endfor %}
    </institutions>
</acsconfig>

<!-- vim:noet:ts=4:sw=4: -->
